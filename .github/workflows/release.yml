name: Release
on:
  push:
    branches:
      - master

env:
  EXAMPLE_APP: 'svelte'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        artifact:
          [
            'core',
            'ngx',
            'devtools-plugin',
            'hydration-plugin',
            'logger-plugin',
          ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache Packages
        id: cache-packages
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Ensure NPM 8
        run: npm install --global npm@8
      - name: Check if ${{ matrix.artifact }} is already deployed
        run: |
          VERSION=$(cat ".github/version.txt")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          IS_ON_NPM=$(if [ ! -z "$(npm view @tinyslice/${{ matrix.artifact }}@$VERSION 2> /dev/null)" ]; then echo 'true'; else echo 'false'; fi)
          echo "IS_ON_NPM=$IS_ON_NPM" >> $GITHUB_ENV
          echo "was @tinyslice/${{ matrix.artifact }}@$VERSION already on npm: $IS_ON_NPM"
      - name: Install dependencies
        if: env.IS_ON_NPM != 'true'
        run: npm install
      - name: Verify that ${{ matrix.artifact }} builds
        if: env.IS_ON_NPM != 'true'
        run: |
          npx nx run ${{ matrix.artifact }}:build:production
      - name: Verify that ${{ matrix.artifact }} lints are succeeding
        if: env.IS_ON_NPM != 'true'
        run: |
          npx nx run ${{ matrix.artifact }}:lint
      - name: Verify that ${{ matrix.artifact }} tests are succeeding
        if: env.IS_ON_NPM != 'true'
        run: |
          npx nx run ${{ matrix.artifact }}:test
      - name: Release ${{ matrix.artifact }} on NPM
        if: env.IS_ON_NPM != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
          npm publish ./dist/libs/${{ matrix.artifact }} --access public
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache Packages
        id: cache-packages
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Ensure NPM 8
        run: npm install --global npm@8
      - name: Install dependencies
        run: npm install
      - name: Build Angular Github Pages example
        if: env.EXAMPLE_APP == 'angular'
        run: |
          npm run build:angular -- --baseHref '/${{ github.event.repository.name }}/'
          cp ./dist/apps/angular/index.html ./dist/apps/angular/404.html
      - name: Build Svelte Github Pages example
        if: env.EXAMPLE_APP == 'svelte'
        run: |
          npm run build:svelte -- --baseHref '/${{ github.event.repository.name }}/'
          cp ./dist/apps/svelte/index.html ./dist/apps/svelte/404.html
      - name: Deploy Angular Example to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        if: env.EXAMPLE_APP == 'angular'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist/apps/angular
      - name: Deploy Svelte Example to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        if: env.EXAMPLE_APP == 'svelte'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist/apps/svelte
