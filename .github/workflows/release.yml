name: Release
on:
  push:
    branches:
      - master
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache Packages
        id: cache-packages
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Ensure NPM 8
        run: npm install --global npm@8
      - name: Check if libraries are already deployed
        run: |
          VERSION=$(cat ".github/version.txt")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          IS_ON_NPM_CORE=$(if [ ! -z "$(npm view @tinyslice/core@$VERSION 2> /dev/null)" ]; then echo 'true'; else echo 'false'; fi)
          echo "IS_ON_NPM_CORE=$IS_ON_NPM_CORE" >> $GITHUB_ENV
          IS_ON_NPM_DEVTOOLS_PLUGIN=$(if [ ! -z "$(npm view @tinyslice/devtools-plugin@$VERSION 2> /dev/null)" ]; then echo 'true'; else echo 'false'; fi)
          echo "IS_ON_NPM_DEVTOOLS_PLUGIN=$IS_ON_NPM_DEVTOOLS_PLUGIN" >> $GITHUB_ENV
          IS_ON_NPM_NGX=$(if [ ! -z "$(npm view @tinyslice/ngx@$VERSION 2> /dev/null)" ]; then echo 'true'; else echo 'false'; fi)
          echo "IS_ON_NPM_NGX=$IS_ON_NPM_NGX" >> $GITHUB_ENV
          echo "$VERSION"
          echo "@tinyslice/core is on npm: $IS_ON_NPM_CORE"
          echo "@tinyslice/devtools-plugin is on npm: $IS_ON_NPM_CORE"
          echo "@tinyslice/ngx is on npm: $IS_ON_NPM_CORE"
      - name: Install dependencies
        run: npm install --legacy-peer-deps
      - name: Build
        run: |
          npm run build -- --baseHref=/${{ github.event.repository.name }}/
      - name: Release @tinyslice/core on NPM
        if: env.IS_ON_NPM_CORE != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
          npm publish ./dist/libs/core --access public
      - name: Release @tinyslice/devtools-plugin on NPM
        if: env.IS_ON_NPM_DEVTOOLS_PLUGIN != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
          npm publish ./dist/libs/devtools-plugin --access public
      - name: Release @tinyslice/ngx on NPM
        if: env.IS_ON_NPM_NGX != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
          npm publish ./dist/libs/ngx --access public
      - name: Use index.html as 404.html
        run: |
          cp ./dist/apps/angular/index.html ./dist/apps/angular/404.html
      - name: Deploy Angular Example to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist/apps/angular
