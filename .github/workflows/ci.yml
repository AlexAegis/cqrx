name: CI

on:
  push:
    branches: '**'
  pull_request:
    branches: '**'

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Cache Packages
        id: cache-packages
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install packages
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: npm install --legacy-peer-deps
      - name: Lint with NX
        run: npm run lint
      - name: Lint with ESLint
        run: npm run lint:es
      - name: Lint format
        run: npm run lint:format
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Cache Packages
        id: cache-packages
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install packages
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: npm install --legacy-peer-deps
      - name: test
        run: npm run test
      - name: Upload coverage result to codacy
        run: |
          export CODACY_PROJECT_TOKEN=${{ secrets.CODACY_PROJECT_TOKEN }}
          bash <(curl -Ls https://coverage.codacy.com/get.sh) \
          -- -r coverage/**/*coverage.xml
      - name: Upload coverage result to codecov
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -s coverage/* -t ${{ secrets.CODECOV_TOKEN }}
